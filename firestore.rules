rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /essayThemes/{themeId} {
      allow read: if true;
      allow write: if request.auth != null;
    }
    
    match /proposals/{proposalId} {
      allow read: if true;
      allow write: if request.auth != null;
    }
    
    match /essays/{essayId} {
      allow read: if true;
      allow write: if request.auth != null;
    }
    
    match /users/{userId} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    match /passwordResets/{tokenId} {
      // Permitir criação de tokens de reset sem autenticação
      allow create: if request.resource.data.keys().hasAll(['email', 'token', 'expiresAt', 'createdAt', 'used']) &&
        request.resource.data.email is string &&
        request.resource.data.token is string &&
        request.resource.data.used == false;
      // Permitir leitura e atualização sem autenticação para APIs do servidor
      allow read, update: if true;
    }
    
    match /logs/{logId} {
      // Permitir escrita de logs para usuários autenticados
      allow write: if request.auth != null;
      // Permitir escrita de logs críticos mesmo sem autenticação (com limitações)
      allow write: if request.auth == null && 
        request.resource.data.level in ['error', 'critical'] &&
        request.resource.data.message is string &&
        request.resource.data.message.size() < 500;
      // Apenas admins podem ler logs
      allow read: if request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    match /lessons/{lessonId} {
      // Qualquer usuário autenticado pode ler aulas
      allow read: if request.auth != null;
      // Apenas professores podem criar/editar/deletar aulas
      allow write: if request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'professor';
    }
    
    match /lessonProgress/{progressId} {
      // Usuários podem ler apenas seu próprio progresso
      allow read: if request.auth != null && request.auth.uid == resource.data.userId;
      // Usuários podem criar/atualizar apenas seu próprio progresso
      allow write: if request.auth != null && request.auth.uid == request.resource.data.userId;
    }
    
    match /materials/{materialId} {
      // Qualquer usuário autenticado pode ler materiais
      allow read: if request.auth != null;
      // Apenas professores podem criar/editar/deletar materiais
      allow write: if request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'professor';
    }
    
    match /subscriptions/{subscriptionId} {
      // Usuários podem ler apenas sua própria assinatura
      allow read: if request.auth != null && request.auth.uid == resource.data.userId;
      // Apenas o próprio usuário ou professores podem atualizar assinatura
      allow write: if request.auth != null && (
        request.auth.uid == request.resource.data.userId ||
        (exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'professor')
      );
    }
    
    match /{document=**} {
      allow read: if request.auth != null;
      allow write: if request.auth != null;
    }
  }
} 